@startuml

title __MANAGERS's Class Diagram__\n

  namespace Managers {
    class Managers.GridBuilder {
        {static} + colSize : int
        {static} + grid : GridPane
        {static} + rowSize : int
        - isOcupied : int[][]
        {static} - maxX : int
        {static} - maxY : int
        - objectNumber : int
        - roomNumber : int
        {static} - xOffset : int
        + buildGrid()
        {static} + getMaxX()
        {static} + getMaxY()
        - addElevator()
        - addLobby()
        - createEdges()
        - createGrid()
        - createHotelBackground()
        - createRooms()
        - createStairway()
        - getDimensions()
    }
  }
  

  namespace Managers {
    class Managers.HotelManager {
        {static} + cleaners : List<Person>
        {static} + currentCleanerAmount : int
        {static} + currentCleanerAmountInCleaning : int
        {static} + currentCleanerAmountInEmergencyCleaning : int
        {static} + currentGuestAmount : int
        {static} + currentGuestAmountInCinema : int
        {static} + currentGuestAmountInFitness : int
        {static} + currentGuestAmountInRestaurant : int
        {static} + currentGuestAmountInRoom : int
        {static} + evacuateCleanerMode : boolean
        + evacuateGuestMode : boolean
        {static} + guestCounter : int
        {static} + guests : List<Person>
        {static} + moviePlaying : boolean
        {static} + movieTime : int
        {static} + movieTimeRemaining : int
        + reimportPeople : boolean
        {static} + timer : SimulationTimer
        - selectedRoomId : int
        + HotelManager()
        + Notify()
        + checkIfInRestaurant()
        {static} + findClosestArea()
        {static} + getRoomNode()
        + update()
        - addCleaners()
        - addEmergencyRoomToClean()
        - addRoomToClean()
        - checkEvacuateMode()
        - checkMovie()
        - evacuatePeople()
        {static} - getClosestObject()
        - getPeopleBackInTheBuilding()
        - getRoom()
        {static} - getRoomNodeAfterCheckIn()
        {static} - moveCharacters()
        {static} - personsPerformActions()
        - removeGuest()
        - sendGuestToCinema()
        - sendGuestToFitness()
        - sendGuestToRestaurant()
        - setRealtimeStatistics()
        - splitEventCheckOut()
        - splitEventCleaningEmergency()
        - splitEventGoToCinema()
        - splitEventNeedFood()
        - splitEventStartCinema()
    }
  }
  

  namespace Managers {
    class Managers.SettingBuilder {
        {static} + cleaningTime : int
        {static} + defaultTickSpeed : int
        {static} + dieInLineTime : int
        {static} + movieTime : int
        {static} + stairTime : int
        {static} + tickSpeed : int
        - settingList : ArrayList<String>
        {static} + getCleaningTime()
        {static} + getMovieTime()
        {static} + getStairTime()
        {static} + getTickSpeed()
        {static} + getstairTime()
        {static} + setMovieTime()
        {static} + setStairTime()
        {static} + setTickSpeed()
        - getSettings()
    }
  }
  

  namespace Managers {
    class Managers.SimulationTimer {
        - currentTick : int
        - delay : int
        - interval : int
        - pause : boolean
        - tickRate : int
        + activateTimer()
        + pause()
        + setInterval()
    }
  }
  

  Managers.GridBuilder o-- ShortestPath.Dijkstra : _ds
  Managers.HotelManager .up.|> EventLib.HotelEventListener
  Managers.HotelManager .up.|> java.util.Observer
  Managers.HotelManager o-- ShortestPath.Dijkstra : _ds
  Managers.SimulationTimer -up-|> java.util.Observable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
