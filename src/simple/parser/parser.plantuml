@startuml

title __PARSER's Class Diagram__\n

  namespace simple {
    namespace parser {
      interface simple.parser.ContainerFactory {
          {abstract} + creatArrayContainer()
          {abstract} + createObjectContainer()
      }
    }
  }
  

  namespace simple {
    namespace parser {
      interface simple.parser.ContentHandler {
          {abstract} + endArray()
          {abstract} + endJSON()
          {abstract} + endObject()
          {abstract} + endObjectEntry()
          {abstract} + primitive()
          {abstract} + startArray()
          {abstract} + startJSON()
          {abstract} + startObject()
          {abstract} + startObjectEntry()
      }
    }
  }
  

  namespace simple {
    namespace parser {
      class simple.parser.JSONParser {
          {static} + S_END : int
          {static} + S_INIT : int
          {static} + S_IN_ARRAY : int
          {static} + S_IN_ERROR : int
          {static} + S_IN_FINISHED_VALUE : int
          {static} + S_IN_OBJECT : int
          {static} + S_IN_PAIR_VALUE : int
          {static} + S_PASSED_PAIR_KEY : int
          - handlerStatusStack : LinkedList
          - status : int
          + getPosition()
          + parse()
          + parse()
          + parse()
          + parse()
          + parse()
          + parse()
          + parse()
          + parse()
          + reset()
          + reset()
          - createArrayContainer()
          - createObjectContainer()
          - nextToken()
          - peekStatus()
      }
    }
  }
  

  namespace simple {
    namespace parser {
      class simple.parser.ParseException {
          {static} + ERROR_UNEXPECTED_CHAR : int
          {static} + ERROR_UNEXPECTED_EXCEPTION : int
          {static} + ERROR_UNEXPECTED_TOKEN : int
          - errorType : int
          - position : int
          {static} - serialVersionUID : long
          - unexpectedObject : Object
          + ParseException()
          + ParseException()
          + ParseException()
          + getErrorType()
          + getMessage()
          + getPosition()
          + getUnexpectedObject()
          + setErrorType()
          + setPosition()
          + setUnexpectedObject()
      }
    }
  }
  

  namespace simple {
    namespace parser {
      class simple.parser.Yylex {
          {static} + STRING_BEGIN : int
          {static} + YYEOF : int
          {static} + YYINITIAL : int
          {static} - ZZ_ACTION : int[]
          {static} - ZZ_ACTION_PACKED_0 : String
          {static} - ZZ_ATTRIBUTE : int[]
          {static} - ZZ_ATTRIBUTE_PACKED_0 : String
          {static} - ZZ_BUFFERSIZE : int
          {static} - ZZ_CMAP : char[]
          {static} - ZZ_CMAP_PACKED : String
          {static} - ZZ_ERROR_MSG : String[]
          {static} - ZZ_LEXSTATE : int[]
          {static} - ZZ_NO_MATCH : int
          {static} - ZZ_PUSHBACK_2BIG : int
          {static} - ZZ_ROWMAP : int[]
          {static} - ZZ_ROWMAP_PACKED_0 : String
          {static} - ZZ_TRANS : int[]
          {static} - ZZ_UNKNOWN_ERROR : int
          - sb : StringBuffer
          - yychar : int
          - yycolumn : int
          - yyline : int
          - zzAtBOL : boolean
          - zzAtEOF : boolean
          - zzBuffer : char[]
          - zzCurrentPos : int
          - zzEndRead : int
          - zzLexicalState : int
          - zzMarkedPos : int
          - zzReader : Reader
          - zzStartRead : int
          - zzState : int
          + yybegin()
          + yycharat()
          + yyclose()
          + yylength()
          + yylex()
          + yypushback()
          + yyreset()
          + yystate()
          + yytext()
          ~ Yylex()
          ~ Yylex()
          ~ getPosition()
          - zzRefill()
          - zzScanError()
          {static} - zzUnpackAction()
          {static} - zzUnpackAction()
          {static} - zzUnpackAttribute()
          {static} - zzUnpackAttribute()
          {static} - zzUnpackCMap()
          {static} - zzUnpackRowMap()
          {static} - zzUnpackRowMap()
      }
    }
  }
  

  namespace simple {
    namespace parser {
      class simple.parser.Yytoken {
          {static} + TYPE_COLON : int
          {static} + TYPE_COMMA : int
          {static} + TYPE_EOF : int
          {static} + TYPE_LEFT_BRACE : int
          {static} + TYPE_LEFT_SQUARE : int
          {static} + TYPE_RIGHT_BRACE : int
          {static} + TYPE_RIGHT_SQUARE : int
          {static} + TYPE_VALUE : int
          + type : int
          + value : Object
          + Yytoken()
          + toString()
      }
    }
  }
  

  simple.parser.JSONParser o-- simple.parser.Yylex : lexer
  simple.parser.JSONParser o-- simple.parser.Yytoken : token


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
