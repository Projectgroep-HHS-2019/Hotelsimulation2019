@startuml

title __EVENTLIB's Class Diagram__\n

  namespace EventLib {
    class EventLib.HotelEvent {
        + Data : Map<String, String>
        + Message : String
        + Time : int
        + toString()
        ~ HotelEvent()
    }
  }
  

  namespace EventLib {
    interface EventLib.HotelEventListener {
        {abstract} + Notify()
    }
  }
  

  namespace EventLib {
    class EventLib.HotelEventManager {
        - counterHTE : int
        - events : ArrayList<HotelEvent>
        - fireEventFactor : double
        - fireEventTimer : double
        - listeners : ArrayList<HotelEventListener>
        - pause : boolean
        - stop : boolean
        - t : Thread
        - threadName : String
        + HotelEventManager()
        + changeSpeed()
        + deregister()
        + pause()
        + register()
        + run()
        + start()
        + stop()
        - fireEvent()
        - getCurrentTime()
    }
  }
  

  namespace EventLib {
    enum HotelEventType {
      CHECK_IN
      CHECK_OUT
      CLEANING_EMERGENCY
      EVACUATE
      GODZILLA
      GOTO_CINEMA
      GOTO_FITNESS
      NEED_FOOD
      NONE
      START_CINEMA
    }
  }
  

  EventLib.HotelEvent o-- EventLib.HotelEventType : Type
  EventLib.HotelEventManager .up.|> java.lang.Runnable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
